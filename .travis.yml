env:
    global:
        - PATH=$HOME/.local/bin:$PATH

services:
    - docker

install:
    - docker run -v $(pwd):/app -w /app node:12 yarn

script:
    - docker run -v $(pwd):/app -w /app node:12 yarn run build
    - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker run -v $PWD:/usr/src -v $HOME/.sonar:/root/.sonar -e SONAR_TOKEN=$SONAR_TOKEN newtmitch/sonar-scanner:4.0 ; fi

after_script:
    - rm -rf .scannerwork

before_deploy:
    - pip install --user awscli

deploy:
    -   provider: script
        skip_cleanup: true
        script: aws s3 sync --region=eu-west-3 --delete --acl public-read build s3://okty-learning
        on:
            repo: Okty-io/okty-learning
            branch: master
    -   provider: script
        skip_cleanup: true
        script: aws s3 sync --region=eu-west-3 --delete --acl public-read build s3://okty-learning-dev
        on:
            repo: Okty-io/okty-learning
            branch: dev

after_deploy:
    - if [ "$TRAVIS_BRANCH" == "master" ]; then aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_PROD_DISTRIBUTION_ID --paths "/*"; fi
    - if [ "$TRAVIS_BRANCH" == "dev" ]; then aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DEV_DISTRIBUTION_ID --paths "/*"; fi
